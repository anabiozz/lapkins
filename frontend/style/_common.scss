*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
a {
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style: none;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
    display: block;
}

body::-webkit-scrollbar {
  width: 10px;
}

body::-webkit-scrollbar-track {
  -webkit-box-shadow: inset 0 0 6px $main_black_color;
  box-shadow: inset 0 0 6px $main_black_color;
}

body::-webkit-scrollbar-thumb {
  background-color: $main_black_color;
  outline: 1px solid slategrey;
}

html {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  margin-left: calc(100vw - 100%);
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 0;
  padding: 0;
}

@mixin font($weight) {
  font-family: $primary_font;
  color: $main_color;
  font-weight: $weight;
  font-size: 16px;
}

body {
  margin: 0;
  padding: 0;
  background-color: #fff;
  @include font(400)
}

::selection {
  background: #7e779e;
  color: #fff;
  text-shadow: none;
}

.container {
  margin: 0 auto;
}

img,
.img {
  max-width: 100%;
  transition: all 0.3s ease-out 0s;
}

a {
  outline: none;
  text-decoration: none;
}

.clearfix {
  clear: both;
}

html::after {
	content:'';
	background: linear-gradient(21deg, #10abff, #1beabd);
	height:3px;
	width:100%;
	position:absolute;
	left:0;
	top:0;
}

@media all and (max-width: 500px) {}

@media all and (max-width: 768px) {}

@media all and (max-width: 959px) and (min-width: 600px) {
  body {
    font-size: 16px;
  }
}

@media all and (max-width: 1367px) and (min-width: 992px) {
  body {
    font-size: 16px;
  }
}

@media all and (min-width: 1378px) {
  body {
    font-size: 18px;
  }
}

@-webkit-keyframes reveal {
  0% {
    opacity: 0;
  }

  10% {
    opacity: 0.1;
  }

  20% {
    opacity: 0.2;
  }

  30% {
    opacity: 0.3;
  }

  40% {
    opacity: 0.4;
  }

  50% {
    opacity: 0.5;
  }

  60% {
    opacity: 0.6;
  }

  70% {
    opacity: 0.7;
  }

  80% {
    opacity: 0.8;
  }

  90% {
    opacity: 0.9;
  }

  100% {
    opacity: 1;
  }
}

@keyframes reveal {
  0% {
    opacity: 0;
  }

  10% {
    opacity: 0.1;
  }

  20% {
    opacity: 0.2;
  }

  30% {
    opacity: 0.3;
  }

  40% {
    opacity: 0.4;
  }

  50% {
    opacity: 0.5;
  }

  60% {
    opacity: 0.6;
  }

  70% {
    opacity: 0.7;
  }

  80% {
    opacity: 0.8;
  }

  90% {
    opacity: 0.9;
  }

  100% {
    opacity: 1;
  }
}



$colors: (
  "primary": $main_black_color,
  "secondary": $main_color,
);

@function color($key) {
  @if not map-has-key($color, $key) {
    @warn "Key `#{$key}` not found in $colors map.";
  }
  @return map-get($colors, $key)
}

@mixin unity-parent($child) {
  @at-root #{selector-unity(&, $child)} {
    @content;
  }
}

@mixin max-screen($res) {
  @media screen and (max-width: $res) {
    @content;
  }
}

@mixin grid($cols, $margin) {
  position: relative;
  background: #7e779e;
  margin-bottom: $margin;
  height: 150px;

  @if($cols >= 5) {
    width: 100%;
    margin-right: 0;
  }
  @else {
    width: ((100% - (($cols - 1) * $margin)) / $cols);
    margin-right: $margin;
  }

  // Отменяю марджин у последнего элемента
  &:nth-child(#{$cols}n) {
    margin-right: 0;
  }
}